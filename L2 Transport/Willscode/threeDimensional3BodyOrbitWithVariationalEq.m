%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Variational equation which when integrated%%%   yields the state transition matrix%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function Xdot = threeDimensional3BodyOrbitWithVariationalEq(t,M)    global params;        % state to be integrated    x = M(1);    y = M(2);    z = M(3);    vx = M(4);    vy = M(5);    vz = M(6);        % state transition matrix to be integrated    Phi = [M(7:12) M(13:18) M(19:24) M(25:30) M(31:36) M(37:42)];            % Distance from primary mass (Sun) and secondary mass (planet) to    %   spacecraft - r1 and r2 respectively.    % spacecraft - r1 and r2 respectively.    r1 = sqrt((x+params.mu)^2 + y^2 + z^2);    r2 = sqrt((x-1+params.mu)^2 + y^2 + z^2);        % gradient of effective potential function    U_barx = -x + (1-params.mu)*(x+params.mu)/(r1^3) + params.mu*(x-1+params.mu)/(r2^3);    U_bary = -y + (1-params.mu)*y/(r1^3) + params.mu*y/(r2^3);    U_barz = (1-params.mu)*z/(r1^3) + params.mu*z/(r2^3);              Ubar_xx = -1 + (1-params.mu)*((r1^3-3*(x+params.mu)^2*r1)/r1^6) + params.mu*((r2^3-3*(x-1+params.mu)^2*r2)/r2^6);    Ubar_yy = -1 + (1-params.mu)*((r1^3-3*y^2*r1)/r1^6) + params.mu*((r2^3-3*y^2*r2)/r2^6);    Ubar_zz = (1-params.mu)*((r1^3-3*z^2*r1)/r1^6) + params.mu*((r2^3-3*z^2*r2)/r2^6);;    Ubar_xy = -3*y*(((1-params.mu)*(x+params.mu)/r1^5) + (params.mu*(x-1+params.mu)/r2^5));    Ubar_yx = Ubar_xy;    Ubar_xz = -3*z*(((1-params.mu)*(x+params.mu)/r1^5) + (params.mu*(x-1+params.mu)/r2^5));    Ubar_zx = Ubar_xz;    Ubar_yz = -3*z*y*(((1-params.mu)/r1^5) + (params.mu/r2^5));    Ubar_zy = Ubar_yz;        % 3D CR3BP dynamics    Xdot(1,1) = vx;    Xdot(2,1) = vy;    Xdot(3,1) = vz;    Xdot(4,1) = 2*vy - U_barx;    Xdot(5,1) = -2*vx - U_bary;    Xdot(6,1) = -U_barz;    % Variational equation    Df = [       0,        0,         0,  1, 0, 0;                 0,        0,         0,  0, 1, 0;                 0,        0,         0,  0, 0, 1;          -Ubar_xx, -Ubar_xy,  -Ubar_xz,  0, 2, 0;          -Ubar_yx, -Ubar_yy,  -Ubar_yz, -2, 0, 0;          -Ubar_zx, -Ubar_zy,  -Ubar_zz,  0, 0, 0];                  Phi_dot = Df*Phi;        Xdot(7:12,1)  = Phi_dot(:,1);    Xdot(13:18,1) = Phi_dot(:,2);    Xdot(19:24,1) = Phi_dot(:,3);    Xdot(25:30,1) = Phi_dot(:,4);    Xdot(31:36,1) = Phi_dot(:,5);    Xdot(37:42,1) = Phi_dot(:,6);    end